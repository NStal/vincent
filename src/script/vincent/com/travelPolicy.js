// Generated by CoffeeScript 1.10.0
(function() {
  var COMPolicy, COMTravelPolicy,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  COMPolicy = require("./policy");

  COMTravelPolicy = (function(superClass) {
    extend(COMTravelPolicy, superClass);

    function COMTravelPolicy(node) {
      this.node = node;
      COMTravelPolicy.__super__.constructor.call(this, this.node);
    }

    COMTravelPolicy.prototype.write = "ignore";

    COMTravelPolicy.prototype.forwardChar = "ignore";

    COMTravelPolicy.prototype.backwardChar = "ignore";

    COMTravelPolicy.prototype.deleteChar = "ignore";

    COMTravelPolicy.prototype.upwardChar = "ignore";

    COMTravelPolicy.prototype.downwardChar = "ignore";

    COMTravelPolicy.prototype.head = "ignore";

    COMTravelPolicy.prototype.tail = "ignore";

    COMTravelPolicy.prototype.startOfLine = "ignore";

    COMTravelPolicy.prototype.endOfLine = "ignore";

    COMTravelPolicy.prototype.forwardBypassed = "ignore";

    COMTravelPolicy.prototype.backwardBypassed = "ignore";

    COMTravelPolicy.prototype.deleteBypassed = "ignore";

    COMTravelPolicy.prototype.tailBoundary = "ignore";

    return COMTravelPolicy;

  })(COMPolicy);

  module.exports = COMTravelPolicy;

}).call(this);
