// Generated by CoffeeScript 1.10.0
(function() {
  var COMComposePolicy, COMPolicy,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  COMPolicy = require("./policy");

  COMComposePolicy = (function(superClass) {
    extend(COMComposePolicy, superClass);

    function COMComposePolicy(node) {
      this.node = node;
      COMComposePolicy.__super__.constructor.call(this, this.node);
    }

    COMComposePolicy.prototype.newlineSplitHead = false;

    COMComposePolicy.prototype.newlineSplitTail = false;

    COMComposePolicy.prototype.tailingNewline = false;

    COMComposePolicy.prototype.headingNewline = false;

    COMComposePolicy.prototype.borrows = false;

    COMComposePolicy.prototype.lend = false;

    return COMComposePolicy;

  })(COMPolicy);

  module.exports = COMComposePolicy;

}).call(this);
