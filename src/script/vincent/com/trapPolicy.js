// Generated by CoffeeScript 1.10.0
(function() {
  var COMPolicy, COMTrapPolicy,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  COMPolicy = require("./policy");

  COMTrapPolicy = (function(superClass) {
    extend(COMTrapPolicy, superClass);

    function COMTrapPolicy(node) {
      this.node = node;
      COMTrapPolicy.__super__.constructor.call(this, this.node);
    }

    COMTrapPolicy.prototype.trap = "ignore";

    COMTrapPolicy.prototype.trapOut = "ignore";

    COMTrapPolicy.prototype.trapIn = "ignore";

    COMTrapPolicy.prototype.behave = function(behavior) {
      var prop;
      for (prop in behavior) {
        if (behavior.hasOwnProperty(prop)) {
          this[prop] = behavior[prop];
        }
      }
      return this;
    };

    return COMTrapPolicy;

  })(COMPolicy);

  module.exports = COMTrapPolicy;

}).call(this);
