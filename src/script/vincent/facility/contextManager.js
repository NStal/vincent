// Generated by CoffeeScript 1.10.0
(function() {
  var COMContext, ContextManager, EventEmitter,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  EventEmitter = (require("../common/events")).EventEmitter;

  COMContext = require("../com/context");

  ContextManager = (function(superClass) {
    extend(ContextManager, superClass);

    function ContextManager(editor) {
      this.editor = editor;
      ContextManager.__super__.constructor.call(this);
      this.contexts = [];
    }

    ContextManager.prototype.setDefaultAttachmentManager = function(defaultAttachmentManager) {
      this.defaultAttachmentManager = defaultAttachmentManager;
    };

    ContextManager.prototype.create = function(option) {
      var context;
      if (option == null) {
        option = {};
      }
      context = new COMContext();
      context.editor = this.editor;
      this.contexts.push(context);
      context.attachments = option.attachments || this.defaultAttachmentManager;
      this.emit("context/create", context);
      return context;
    };

    ContextManager.prototype.destroy = function(context) {
      this.contexts = this.contexts.filter(function(item) {
        return item !== context;
      });
      return this.emit("context/destroy", context);
    };

    return ContextManager;

  })(EventEmitter);

  module.exports = ContextManager;

}).call(this);
