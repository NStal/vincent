// Generated by CoffeeScript 1.10.0
(function() {
  var Package,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Package = (function(superClass) {
    extend(Package, superClass);

    function Package() {
      return Package.__super__.constructor.apply(this, arguments);
    }

    Package.prototype.name = "VoidPackage";

    Package.prototype.requires = [];

    Package.prototype.Commands = [];

    Package.prototype.Hotkeys = [];

    Package.prototype.Decorations = [];

    Package.prototype.Spells = [];

    Package.prototype.Runes = [];

    Package.prototype.Elements = [];

    Package.prototype.Composers = [];

    Package.prototype.Intents = [];

    Package.prototype.isInitialized = false;

    Package.prototype.onContextCreate = null;

    Package.prototype.onContextDestroy = null;

    Package.prototype.init = function(editor, deps) {
      this.editor = editor;
      this.deps = deps != null ? deps : {};
      this.isInitialized = true;
      if (typeof this.onContextCreate === "function") {
        this.editor.contextManager.listenBy(this, "context/create", (function(_this) {
          return function(c) {
            return _this.onContextCreate(c);
          };
        })(this));
      }
      if (typeof this.onContextDestroy === "function") {
        return this.editor.contextManager.listenBy(this, "context/destroy", (function(_this) {
          return function(c) {
            return _this.onContextDestroy(c);
          };
        })(this));
      }
    };

    return Package;

  })(Leaf.EventEmitter);

  module.exports = Package;

}).call(this);
