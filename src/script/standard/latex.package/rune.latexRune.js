// Generated by CoffeeScript 1.10.0
(function() {
  var LatexEditPopup, LatexRune, LatexRuneView,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  LatexEditPopup = require("./view/latexEditPopup");

  LatexRuneView = require("./view/latexRuneView");

  LatexRune = (function(superClass) {
    extend(LatexRune, superClass);

    LatexRune.prototype.type = "LatexRune";

    function LatexRune(context, data) {
      this.context = context;
      if (data == null) {
        data = {};
      }
      this.appearance = {
        tagName: "latex-rune",
        classList: ["com", "com-rune"]
      };
      this.latex = data.latex || "";
      LatexRune.__super__.constructor.call(this, this.context);
    }

    LatexRune.prototype.customBaseRender = function() {
      var base;
      if (!this.cache.view) {
        if ((base = this.cache).view == null) {
          base.view = new LatexRuneView(this);
        }
      }
      this.el = this.cache.view.node;
      return true;
    };

    LatexRune.prototype.render = function() {
      var args, ref;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      LatexRune.__super__.render.apply(this, args);
      if ((ref = this.cache.view) != null) {
        ref.render();
      }
      return true;
    };

    LatexRune.prototype.trigger = function() {
      this.edit();
      return true;
    };

    LatexRune.prototype.edit = function() {
      var popup;
      popup = new LatexEditPopup();
      return popup.edit(this.latex, (function(_this) {
        return function(err, result) {
          if (err) {
            return;
          }
          return _this.context.transact(function() {
            return _this.context.operate(new COM.COMOperation.ChangePropertyOperation(_this.context, _this, {
              property: {
                latex: result
              }
            }));
          });
        };
      })(this));
    };

    LatexRune.prototype.toJSON = function() {
      var json;
      json = LatexRune.__super__.toJSON.call(this);
      json.latex = this.latex || "";
      return json;
    };

    return LatexRune;

  })(COM.COMRune);

  module.exports = LatexRune;

}).call(this);
