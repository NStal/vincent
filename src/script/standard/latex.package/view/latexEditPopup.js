// Generated by CoffeeScript 1.10.0
(function() {
  var Debounce, FloatView, LatexEditPopup, MathJaxAdapter,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  App.tm.use("package/latex/latexEditPopup");

  FloatView = require("/view/base/floatView");

  Debounce = require("/component/debounce");

  MathJaxAdapter = require("/component/mathJaxAdapter");

  LatexEditPopup = (function(superClass) {
    extend(LatexEditPopup, superClass);

    function LatexEditPopup() {
      LatexEditPopup.__super__.constructor.call(this, App.templates["package"].latex.latexEditPopup);
      this.shareFocus = true;
      this.renderDebounce = new Debounce({
        time: 500
      }, this.renderLatex.bind(this));
      this.UI.textarea.listenBy(this, "change", (function(_this) {
        return function() {
          return _this.renderDebounce.trigger();
        };
      })(this));
      this.mask$.css({
        backgroundColor: "rgba(0,0,0,.3)"
      });
    }

    LatexEditPopup.prototype.renderLatex = function(latex) {
      var ref;
      if (latex == null) {
        latex = (ref = this.UI.textarea.value) != null ? ref.trim() : void 0;
      }
      latex = latex || "\\rm\\LaTeX";
      if (this.cache === latex) {
        return;
      }
      this.cache = latex;
      this.VM.rendering = true;
      this.UI.renderer.innerHTML = "";
      this.UI.renderer.textContent = "$" + latex + "$";
      return new MathJaxAdapter().render(this.UI.renderer, (function(_this) {
        return function() {
          return _this.VM.rendering = false;
        };
      })(this));
    };

    LatexEditPopup.prototype.onClickCancel = function() {
      return this.hide();
    };

    LatexEditPopup.prototype.onClickOk = function() {
      this.done(null, this.UI.textarea.value);
      return this.hide();
    };

    LatexEditPopup.prototype.done = function() {
      var args, callback;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      callback = this.callback;
      this.callback = null;
      return typeof callback === "function" ? callback.apply(null, args) : void 0;
    };

    LatexEditPopup.prototype.show = function() {
      LatexEditPopup.__super__.show.call(this);
      return this.UI.textarea.focus();
    };

    LatexEditPopup.prototype.edit = function(content, callback) {
      if (callback == null) {
        callback = function() {};
      }
      this.show();
      this.UI.textarea.value = (content != null ? content.trim() : void 0) || "";
      this.renderLatex(content != null ? content.trim() : void 0);
      return this.callback = callback;
    };

    LatexEditPopup.prototype.hide = function() {
      this.UI.textarea.blur();
      this.done(new Error("Abort"));
      return LatexEditPopup.__super__.hide.call(this);
    };

    return LatexEditPopup;

  })(FloatView);

  module.exports = LatexEditPopup;

}).call(this);
