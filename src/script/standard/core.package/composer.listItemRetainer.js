// Generated by CoffeeScript 1.10.0
(function() {
  var Composer, LeftInvokeOneLineElementRetainer, ListItemRetainer,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Composer = require("../helper/composerUtils");

  LeftInvokeOneLineElementRetainer = Composer.LeftInvokeOneLineElementRetainer;

  module.exports = ListItemRetainer = (function(superClass) {
    extend(ListItemRetainer, superClass);

    function ListItemRetainer() {
      return ListItemRetainer.__super__.constructor.apply(this, arguments);
    }

    ListItemRetainer.prototype.type = "ListItem";

    ListItemRetainer.prototype.reg = /^( *)(?:-|\*|\+|[0-9]+(\.|\)|、)) +.*\n?$/;

    ListItemRetainer.prototype.atRelease = function(target, replacement) {
      var i, item, items, len, ref, results;
      if (target.isCollapsed && ((ref = target.collapseListItems) != null ? ref.length : void 0) > 0 && target.contentString.length > 0) {
        items = target.collapseListItems.slice();
        items.reverse();
        results = [];
        for (i = 0, len = items.length; i < len; i++) {
          item = items[i];
          results.push(replacement.after(item));
        }
        return results;
      }
    };

    return ListItemRetainer;

  })(LeftInvokeOneLineElementRetainer);

}).call(this);
