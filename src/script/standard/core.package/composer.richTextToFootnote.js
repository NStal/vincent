// Generated by CoffeeScript 1.10.0
(function() {
  var Composer, LeftInvokeOneLineElementExtractor, RichTextToFootnote,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  Composer = require("../helper/composerUtils");

  LeftInvokeOneLineElementExtractor = Composer.LeftInvokeOneLineElementExtractor;

  module.exports = RichTextToFootnote = (function(superClass) {
    extend(RichTextToFootnote, superClass);

    function RichTextToFootnote() {
      return RichTextToFootnote.__super__.constructor.apply(this, arguments);
    }

    RichTextToFootnote.prototype.type = "RichText";

    RichTextToFootnote.prototype.renderTargetType = "Footnote";

    RichTextToFootnote.prototype.reg = /(?:\n|^)( *)\[\^?[^\[\]\n]*\]: *.*(?:\n|$)/;

    RichTextToFootnote.prototype.exec = function() {
      var args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      if (RichTextToFootnote.__super__.exec.apply(this, args)) {
        return true;
      }
      return false;
    };

    return RichTextToFootnote;

  })(LeftInvokeOneLineElementExtractor);

}).call(this);
