// Generated by CoffeeScript 1.10.0
(function() {
  var COMSpell, LinkSpell,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  COMSpell = require("/vincent/com/spell");

  LinkSpell = (function(superClass) {
    extend(LinkSpell, superClass);

    LinkSpell.prototype.type = "Void";

    function LinkSpell() {
      var args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      if (this.appearance == null) {
        this.appearance = {
          tagName: "a",
          classList: ["com", "com-link", "com-text"]
        };
      }
      LinkSpell.__super__.constructor.apply(this, args);
    }

    LinkSpell.prototype.parse = function() {
      return null;
    };

    LinkSpell.prototype.render = function() {
      var args;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      LinkSpell.__super__.render.apply(this, args);
      this.el.setAttribute("target", "_blank+" + (Math.random()));
      this.parse();
      if (this.url) {
        this.el.setAttribute("href", this.url);
      }
      if (this.title) {
        return this.el.setAttribute("title", this.title);
      }
    };

    LinkSpell.prototype.trigger = function(option) {
      if (option == null) {
        option = {};
      }
      this.parse();
      this.context.castIntent("OpenIntent", this.url);
      return true;
    };

    return LinkSpell;

  })(COMSpell);

  module.exports = LinkSpell;

}).call(this);
