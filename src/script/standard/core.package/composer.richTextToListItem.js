// Generated by CoffeeScript 1.10.0
(function() {
  var Composer, LeftInvokeOneLineElementExtractor, ListItem, RichTextToListItem,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Composer = require("../helper/composerUtils");

  ListItem = require("./element.listItem");

  LeftInvokeOneLineElementExtractor = Composer.LeftInvokeOneLineElementExtractor;

  module.exports = RichTextToListItem = (function(superClass) {
    extend(RichTextToListItem, superClass);

    function RichTextToListItem() {
      return RichTextToListItem.__super__.constructor.apply(this, arguments);
    }

    RichTextToListItem.prototype.type = "RichText";

    RichTextToListItem.prototype.reg = /(?:\n|^)( *)(?:-|\*|\+|[0-9]+(\.|\)|„ÄÅ)) +.*(?:\n|$)/;

    RichTextToListItem.prototype.renderTargetType = "ListItem";

    RichTextToListItem.prototype.renderTargetCtor = ListItem;

    return RichTextToListItem;

  })(LeftInvokeOneLineElementExtractor);

}).call(this);
