// Generated by CoffeeScript 1.10.0
(function() {
  var Composer, FootnoteRetainer, LeftInvokeOneLineElementRetainer,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Composer = require("../helper/composerUtils");

  LeftInvokeOneLineElementRetainer = Composer.LeftInvokeOneLineElementRetainer;

  module.exports = FootnoteRetainer = (function(superClass) {
    extend(FootnoteRetainer, superClass);

    function FootnoteRetainer() {
      return FootnoteRetainer.__super__.constructor.apply(this, arguments);
    }

    FootnoteRetainer.prototype.type = "Footnote";

    FootnoteRetainer.prototype.reg = /^( *)\[\^?[^\[\]\n]*\]: *.*\n?$/;

    return FootnoteRetainer;

  })(LeftInvokeOneLineElementRetainer);

}).call(this);
