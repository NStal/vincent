// Generated by CoffeeScript 1.10.0
(function() {
  var Composer, Divider, LeftInvokeOneLineElementExtractor, RichTextToDivider,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Composer = require("../helper/composerUtils");

  Divider = require("./element.divider");

  LeftInvokeOneLineElementExtractor = Composer.LeftInvokeOneLineElementExtractor;

  module.exports = RichTextToDivider = (function(superClass) {
    extend(RichTextToDivider, superClass);

    function RichTextToDivider() {
      return RichTextToDivider.__super__.constructor.apply(this, arguments);
    }

    RichTextToDivider.prototype.type = "RichText";

    RichTextToDivider.prototype.renderTargetType = "Divider";

    RichTextToDivider.prototype.renderTargetCtor = Divider;

    RichTextToDivider.prototype.reg = /(?:\n|^)((===+)|(---+)) *(?:\n|$)/;

    return RichTextToDivider;

  })(LeftInvokeOneLineElementExtractor);

}).call(this);
